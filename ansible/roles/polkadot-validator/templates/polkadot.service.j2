{# --- PREPARE VARIABLES #}
{% set node_name = hostvars[inventory_hostname].node_name|default(None) %}
{% set execution = hostvars[inventory_hostname].execution|default(None) %}
{% set wasm_execution = hostvars[inventory_hostname].wasm_execution|default(None) %}
{% set telemetry_url = hostvars[inventory_hostname].telemetry_url|default(None) %}
{% set enable_reverse_proxy = hostvars[inventory_hostname].enable_reverse_proxy|default(None) %}
{% set logging_filter = hostvars[inventory_hostname].logging_filter|default(None) %}
{% set base_path = hostvars[inventory_hostname].base_path|default(None) %}
{% set additional_flags = hostvars[inventory_hostname].additional_flags|default(None) %}
{# ## Legacy/deprecated flags #}
{% if node_name is none %}
  {% set node_name = hostvars[inventory_hostname].nodeName|default(None) %}
{% endif %}
{% if telemetry_url is none %}
  {% set telemetry_url = hostvars[inventory_hostname].telemetryUrl|default(None) %}
{% endif %}
{% if enable_reverse_proxy is none %}
  {% set enable_reverse_proxy = hostvars[inventory_hostname].enableReverseProxy|default(None) %}
{% endif %}
{% if logging_filter is none %}
  {% set logging_filter = hostvars[inventory_hostname].loggingFilter|default(None) %}
{% endif %}
{% set additionalCommonFlags = hostvars[inventory_hostname].polkadot_additional_common_flags|default(None) %}
{% set additionalValidatorFlags = hostvars[inventory_hostname].polkadot_additional_validator_flags|default(None) %}
{# --- #}
[Unit]
Description=Polkadot Node
StartLimitIntervalSec=60
StartLimitBurst=5

[Service]
User=polkadot
Group=polkadot
ExecStart=/usr/local/bin/polkadot \
  {% if execution is not none and execution|length %}
  --execution {{ execution }} \
  {% endif %}
  {% if node_name is not none and node_name|length %}
  --name {{ node_name }} \
  {% else %}
  --name {{ project|default('project') }}-sv-validator-{{ groups['validator'].index(inventory_hostname) }} \
  {% endif %}
  {% if wasm_execution is not none and wasm_execution|length %}
  --wasm-execution {{ wasm_execution }} \
  {% else %}
  --wasm-execution Compiled \
  {% endif %}
  {% if telemetry_url is not none and telemetry_url|length %}
    {% set urls = telemetry_url.split(',') %}
    {% for url in urls %}
  --telemetry-url '{{ url }} 1' \
    {% endfor %}
  {% else %}
  --no-telemetry \
  {% endif %}
  {% if enable_reverse_proxy is not none and enable_reverse_proxy is sameas true %}
  --public-addr=/ip4/{{ hostvars[inventory_hostname].public_ip.json.ip }}/tcp/{{ proxy_port }} \
  {% endif %}
  {% if logging_filter is not none and logging_filter|length %}
  -l{{ logging_filter }} \
  {% endif %}
  {% if base_path is not none and base_path|length %}
  --base-path '{{ base_path }}' \
  {% endif %}
  {% if additional_flags is not none and additional_flags|length %}
  {{ additional_flags }} \
  {% endif %}
  {# --- DEPRECATED --- #}
  {% if additionalCommonFlags is not none and additionalCommonFlags|length %}
  {{ additionalCommonFlags }} \
  {% endif %}
  {% if additionalValidatorFlags is not none and additionalValidatorFlags|length %}
  {{ additionalValidatorFlags }} \
  {% endif %}
  {# --- #}
  --validator \
  --chain={{ chain }} \
  --listen-addr=/ip4/127.0.0.1/tcp/{{ p2p_port }} \
  --rpc-methods=Unsafe

Restart=on-failure
RestartSec=5s

[Install]
WantedBy=multi-user.target
